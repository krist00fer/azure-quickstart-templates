{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "maxLength": 32,
      "metadata": {
        "description": "Application password"
      }
    },
    "clusterName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 32,
      "metadata": {
        "description": "Cluster Name"
      },
      "defaultValue": "bnCluster"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "cassandraSetupScriptUrl": {
      "type": "string",
      "metadata": {
        "description": "The URL to the script that installs Cassandra on the VMs"
      },
      "defaultValue": "https://raw.githubusercontent.com/krist00fer/azure-quickstart-templates/master/cassandra-on-ubuntu/CustomScripts/setup-cassandra.sh"
    },
    "bundleTgzCustomUri": {
      "type": "string",
      "metadata": {
        "description": "The bundle tgz custom URL"
      },
      "defaultValue": "default"
    },
    "stackId": {
      "type": "string",
      "minLength": 3,
      "maxLength": 23,
      "metadata": {
        "description": "Stack ID - it is the Application Stack identifier."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "cassandraadmin"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 100,
      "minValue": 10,
      "maxValue": 2000,
      "metadata": {
        "description": "Data Disk Size in GB"
      }
    },
    "customData": {
      "type": "string",
      "metadata": {
        "description": "customData"
      },
      "defaultValue": "# blank"
    },
    "BitnamiTags": {
      "type": "object",
      "defaultValue": {
        "provider": "0FE3856A-6009-4EB1-96C3-1774DA058F86"
      }
    },
    "nodeCount": {
      "type": "int",
      "defaultValue": 3,
      "allowedValues": [
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32
      ],
      "metadata": {
        "description": "Number of nodes to run"
      }
    }
  },
  "variables": {
    "appId": "cassandra",
    "appVersion": "3.11.1-2",
    "newStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'storage')]",
    "diagStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'diag')]",
    "storageAPIVersion": "2017-06-01",
    "publicIPAddressName": "[concat(parameters('stackId'), 'ip')]",
    "dnsPrefix": "[concat(parameters('stackId'),uniquestring(resourceGroup().id))]",
    "appDatabase": "unsupported",
    "clusterName": "[parameters('clusterName')]",
    "availabilitySetName": "[concat(parameters('stackId'), 'set')]",
    "peerAddressIndex": 0,
    "machineCount": "[parameters('nodeCount')]",
    "machineTierMap": "[concat('node=',int(parameters('nodeCount')),',0,')]"
  },
  "resources": [
    {
      "apiVersion": "2017-06-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "sku": {
        "name": "Premium_LRS"
      },
      "kind": "Storage",
      "properties":{}
    },
    {
      "apiVersion": "2017-06-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('diagStorageAccountName')]",
      "sku":{
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "network",
      "dependsOn": [
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/24"
          ]
        },
        "subnets": [
          {
            "name": "network",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('stackId'), variables('peerAddressIndex'), 'nic')]",
      "dependsOn": [
        "Microsoft.Network/virtualNetworks/network",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "tags": {
        "provider": "[toUpper(parameters('BitnamiTags').provider)]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks','network'),'/subnets/', 'network')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('stackId'), add(copyIndex(), add(variables('peerAddressIndex'), 1)), 'nic')]",
      "copy": {
        "name": "niccopy",
        "count": "[sub(variables('machineCount'), 1)]"
      },
      "dependsOn": [
        "Microsoft.Network/virtualNetworks/network"
      ],
      "tags": {
        "provider": "[toUpper(parameters('BitnamiTags').provider)]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks','network'), '/subnets/', 'network')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "tags": {
        "provider": "[toUpper(parameters('BitnamiTags').provider)]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "properties": { }
    },
    {
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('stackId'), copyIndex())]",
      "copy": {
        "name": "vmcopy",
        "count": "[variables('machineCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('stackId'), add(copyIndex(), variables('peerAddressIndex')), 'nic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('stackId'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(parameters('customData'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(variables('newStorageAccountName'), variables('storageAPIVersion')).primaryEndpoints.blob, 'vhds/os-', parameters('stackId'), copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat(reference(variables('newStorageAccountName'), variables('storageAPIVersion')).primaryEndpoints.blob, 'vhds/os-', parameters('stackId'), copyIndex(), '-data.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('stackId'), add(copyIndex(), variables('peerAddressIndex')), 'nic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(variables('diagStorageAccountName'), variables('storageAPIVersion')).primaryEndpoints.blob]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('stackId'), copyIndex(), '/setupMachine')]",
      "copy": {
        "name": "vmextcopy",
        "count": "[variables('machineCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('stackId'), copyIndex())]"
      ],
      "tags": {
        "provider": "[toUpper(parameters('BitnamiTags').provider)]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[parameters('cassandraSetupScriptUrl')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('sh setup-cassandra.sh ', parameters('clusterName'), ' \"10.0.0.1,10.0.0.2,10.0.0.3,10.0.0.4,10.0.0.5,10.0.0.6,10.0.0.7,10.0.0.8,10.0.0.9,10.0.0.10\"')]"
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2016-09-01').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}